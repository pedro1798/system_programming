!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ubuntu/system_programming/22_09/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(OBJ_DIR)/%.o	Makefile	/^$(OBJ_DIR)\/%.o: $(SRC_DIR)\/%.c$/;"	t
$(OBJ_DIR)/%.o	pwd/Makefile	/^$(OBJ_DIR)\/%.o: $(SRC_DIR)\/%.c$/;"	t
$(OBJ_DIR)/%.o	sp03A/Makefile	/^$(OBJ_DIR)\/%.o: $(SRC_DIR)\/%.c$/;"	t
$(TARGET)	Makefile	/^$(TARGET): $(OBJS)$/;"	t
$(TARGET)	pwd/Makefile	/^$(TARGET): $(OBJS)$/;"	t
$(TARGET)	sp03A/Makefile	/^$(TARGET): $(OBJS)$/;"	t
BIN_DIR	Makefile	/^BIN_DIR = bin$/;"	m
BIN_DIR	pwd/Makefile	/^BIN_DIR = bin$/;"	m
BIN_DIR	sp03A/Makefile	/^BIN_DIR = bin$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CC	pwd/Makefile	/^CC = gcc$/;"	m
CC	sp03A/Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -Wall$/;"	m
CFLAGS	pwd/Makefile	/^CFLAGS = -g -Wall$/;"	m
CFLAGS	sp03A/Makefile	/^CFLAGS = -g -Wall$/;"	m
OBJS	Makefile	/^OBJS = $(patsubst $(SRC_DIR)\/%.c, $(OBJ_DIR)\/%.o, $(SRC))$/;"	m
OBJS	pwd/Makefile	/^OBJS = $(patsubst $(SRC_DIR)\/%.c, $(OBJ_DIR)\/%.o, $(SRC))$/;"	m
OBJS	sp03A/Makefile	/^OBJS = $(patsubst $(SRC_DIR)\/%.c, $(OBJ_DIR)\/%.o, $(SRC))$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR = build$/;"	m
OBJ_DIR	pwd/Makefile	/^OBJ_DIR = build$/;"	m
OBJ_DIR	sp03A/Makefile	/^OBJ_DIR = build$/;"	m
PATH_MAX	sp03A/src/sp03A_2022117156.c	/^#define PATH_MAX /;"	d	file:
SRC	Makefile	/^SRC = $(wildcard $(SRC_DIR)\/*.c)$/;"	m
SRC	pwd/Makefile	/^SRC = $(wildcard $(SRC_DIR)\/*.c)$/;"	m
SRC	sp03A/Makefile	/^SRC = $(wildcard $(SRC_DIR)\/*.c)$/;"	m
SRC_DIR	Makefile	/^SRC_DIR = src$/;"	m
SRC_DIR	pwd/Makefile	/^SRC_DIR = src$/;"	m
SRC_DIR	sp03A/Makefile	/^SRC_DIR = src$/;"	m
TARGET	Makefile	/^TARGET = $(BIN_DIR)\/sp02A$/;"	m
TARGET	pwd/Makefile	/^TARGET = $(BIN_DIR)\/pwd$/;"	m
TARGET	sp03A/Makefile	/^TARGET = $(BIN_DIR)\/sp03A$/;"	m
all	Makefile	/^all: $(TARGET)$/;"	t
all	pwd/Makefile	/^all: $(TARGET)$/;"	t
all	sp03A/Makefile	/^all: $(TARGET)$/;"	t
clean	Makefile	/^clean:$/;"	t
clean	pwd/Makefile	/^clean:$/;"	t
clean	sp03A/Makefile	/^clean:$/;"	t
compare_person_name	sp03A/src/sp03A_2022117156.c	/^int compare_person_name(const void *a, const void *b) {$/;"	f	typeref:typename:int
do_ls	sp03A/src/sp03A_2022117156.c	/^void do_ls(char *path) {$/;"	f	typeref:typename:void
filename_info	sp03A/src/sp03A_2022117156.c	/^struct filename_info { \/\/ realloc에 저장할 구조체$/;"	s	file:
get_inode	pwd/src/pwd.c	/^ino_t get_inode(char *fname) {$/;"	f	typeref:typename:ino_t
gid_to_name	sp03A/src/sp03A_2022117156.c	/^char * gid_to_name(gid_t gid) { $/;"	f	typeref:typename:char *
info	sp03A/src/sp03A_2022117156.c	/^    struct stat info;$/;"	m	struct:filename_info	typeref:struct:stat	file:
main	pwd/src/pwd.c	/^int main() {$/;"	f	typeref:typename:int
main	sp03A/src/sp03A_2022117156.c	/^int main(int ac, char *av[]) {$/;"	f	typeref:typename:int
mode_to_letters	sp03A/src/sp03A_2022117156.c	/^void mode_to_letters(int mode, char str[]) {$/;"	f	typeref:typename:void
name	sp03A/src/sp03A_2022117156.c	/^    char *name;$/;"	m	struct:filename_info	typeref:typename:char *	file:
printpathto	pwd/src/pwd.c	/^void printpathto(ino_t this_inode) {$/;"	f	typeref:typename:void
show_file_info	sp03A/src/sp03A_2022117156.c	/^void show_file_info(char *filename, struct stat *info_p) { $/;"	f	typeref:typename:void
uid_to_name	sp03A/src/sp03A_2022117156.c	/^char * uid_to_name(uid_t uid) {$/;"	f	typeref:typename:char *
